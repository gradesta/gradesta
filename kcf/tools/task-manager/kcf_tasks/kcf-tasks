#!/usr/bin/python3
import sys
import os

from kcf_tasks.time_cost_estimates import get_empty_sums, add_sums
from kcf_tasks.milestones import get_milestones
from argparse import ArgumentParser


def print_milestone(milestone, tasks):
    sums = get_empty_sums()
    for task in tasks:
        add_sums(sums, task.estimate_time_cost())

    print("\nMILESTONE: ", milestone)
    print("Minimum decision time:        ", sums["decision_min"])
    print("Maximum decision time:        ", sums["decision_max"])

    print(
        "Minimum individual work time: ",
        sums["individual_work_min"].total_seconds() / 3600,
        " hours",
    )
    print(
        "Maximum individual work time: ",
        sums["individual_work_max"].total_seconds() / 3600,
        " hours",
    )


    print(
        "Minimum team work time:       ",
        sums["team_work_min"].total_seconds() / 3600,
        " hours",
    )
    print(
        "Maximum team work time:       ",
        sums["team_work_max"].total_seconds() / 3600,
        " hours",
    )

parser = ArgumentParser(
                      description="Get information about kcf style tasks")
parser.add_argument('source', nargs='*', default=[os.getcwd()])

opts = parser.parse_args()

for milestone, tasks in get_milestones(opts.source).items():
    print_milestone(milestone, tasks)
